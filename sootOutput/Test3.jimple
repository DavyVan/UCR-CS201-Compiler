public class Test3 extends java.lang.Object
{
    static int func1BB0ExeNum;
    static int func1BB1ExeNum;
    static int func1BB2ExeNum;
    static int func1BB3ExeNum;
    static int func1BB4ExeNum;
    static int func2BB0ExeNum;
    static int func2BB1ExeNum;
    static int func2BB2ExeNum;
    static int func2BB3ExeNum;
    static int func2BB4ExeNum;
    static int <init>BB0ExeNum;
    static int mainBB0ExeNum;

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        int tmpLocal;
        java.io.PrintStream tmpRef;

        tmpLocal = <Test3: int mainBB0ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int mainBB0ExeNum> = tmpLocal;

        args := @parameter0: java.lang.String[];

        staticinvoke <Test3: void func1(int)>(100);

        staticinvoke <Test3: void func2(int)>(10);

        tmpRef = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("Method: <Test3: void main(java.lang.String[])>");

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB0: ");

        tmpLocal = <Test3: int mainBB0ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("Method: <Test3: void func1(int)>");

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB0: ");

        tmpLocal = <Test3: int func1BB0ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB1: ");

        tmpLocal = <Test3: int func1BB1ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB2: ");

        tmpLocal = <Test3: int func1BB2ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB3: ");

        tmpLocal = <Test3: int func1BB3ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB4: ");

        tmpLocal = <Test3: int func1BB4ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("Method: <Test3: void func2(int)>");

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB0: ");

        tmpLocal = <Test3: int func2BB0ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB1: ");

        tmpLocal = <Test3: int func2BB1ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB2: ");

        tmpLocal = <Test3: int func2BB2ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB3: ");

        tmpLocal = <Test3: int func2BB3ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB4: ");

        tmpLocal = <Test3: int func2BB4ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("Method: <Test3: void <init>()>");

        virtualinvoke tmpRef.<java.io.PrintStream: void print(java.lang.String)>("BB0: ");

        tmpLocal = <Test3: int <init>BB0ExeNum>;

        virtualinvoke tmpRef.<java.io.PrintStream: void println(int)>(tmpLocal);

        return;
    }

    public static void func1(int)
    {
        int x, temp$1, tmpLocal;

        tmpLocal = <Test3: int func1BB0ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func1BB0ExeNum> = tmpLocal;

        x := @parameter0: int;

     label1:
        tmpLocal = <Test3: int func1BB1ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func1BB1ExeNum> = tmpLocal;

        if x > 0 goto label2;

        tmpLocal = <Test3: int func1BB2ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func1BB2ExeNum> = tmpLocal;

        goto label3;

     label2:
        tmpLocal = <Test3: int func1BB3ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func1BB3ExeNum> = tmpLocal;

        temp$1 = x + -1;

        x = temp$1;

        goto label1;

     label3:
        tmpLocal = <Test3: int func1BB4ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func1BB4ExeNum> = tmpLocal;

        return;
    }

    public static void func2(int)
    {
        int x, temp$1, tmpLocal;

        tmpLocal = <Test3: int func2BB0ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func2BB0ExeNum> = tmpLocal;

        x := @parameter0: int;

     label1:
        tmpLocal = <Test3: int func2BB1ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func2BB1ExeNum> = tmpLocal;

        if x < 100 goto label2;

        tmpLocal = <Test3: int func2BB2ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func2BB2ExeNum> = tmpLocal;

        goto label3;

     label2:
        tmpLocal = <Test3: int func2BB3ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func2BB3ExeNum> = tmpLocal;

        temp$1 = x + 1;

        x = temp$1;

        goto label1;

     label3:
        tmpLocal = <Test3: int func2BB4ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int func2BB4ExeNum> = tmpLocal;

        return;
    }

    public void <init>()
    {
        Test3 this;
        int tmpLocal;

        tmpLocal = <Test3: int <init>BB0ExeNum>;

        tmpLocal = tmpLocal + 1;

        <Test3: int <init>BB0ExeNum> = tmpLocal;

        this := @this: Test3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }
}
